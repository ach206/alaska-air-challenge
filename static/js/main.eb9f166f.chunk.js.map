{"version":3,"sources":["images/alaska-air-logo.png","images/sprite_60fps.svg","comps/Header.js","comps/SubMenu.js","comps/VertNavBar.js","comps/SubMenuL3.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","tabIndex","alt","Component","SubMenu","nameOfClass","concat","this","props","cName","onClick","closeMenu","VertNavBar","openSubMenu","e","_this","menuItem","document","querySelector","classList","toggle","aria","keyCode","_this2","listItems","topLevel","map","n","i","role","onKeyDown","key","target","cats","Reporting","Agriculture and Customs","Known Crewmembers","Product Safety","SubMenuL3","state","expandedMenu","hideMenu","subL3","spanItems","getElementsByClassName","el","length","contains","setState","getListItems","name","index","expandCategory","bubbles","items","currentTarget","id","children","k","count","categories","_i","_Object$entries","Object","entries","_ref3","slicedToArray","push","App","hamburgerClicked","topLevelCats","currentTopLvlMenuItem","openMenu","slides","vertNav","topSlide","menuBtn","updateTopLvlMenuItem","innerText","Header_Header","VertNavBar_VertNavBar","SubMenuL3_SubMenuL3","SubMenu_SubMenu","Boolean","window","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb9f166f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alaska-air-logo.d2f4261f.png\";","module.exports = __webpack_public_path__ + \"static/media/sprite_60fps.27a86b86.svg\";","import React, { Component } from 'react'\nimport logo from '../images/alaska-air-logo.png';\n\nexport default class Header extends Component {\n\n    render() {\n        return (\n            <div className=\"header-container\">\n                <div className=\"header-logo\">\n                    <img src={logo} tabIndex=\"0\" className=\"logo-image\" alt=\"logo\" />\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class SubMenu extends Component {\n    render() {\n        let nameOfClass = `menu-slide-container ${this.props.cName}`;\n        return (\n            <div className={nameOfClass} onClick={this.props.closeMenu}>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class VertNavBar extends Component {\n   openSubMenu = (e) => {\n        this.props.menuItem(e);\n        let subL3 = document.querySelector(\".lower-level-menu\");\n        subL3.classList.toggle(\"lower-level-menu-clicked\");\n   }\n   aria = (e) => {\n    if (e.keyCode === 13) {\n      this.openSubMenu(e);\n    }\n  }\n    render() {  \n        let nameOfClass = `nav-container ${this.props.cName}`;\n        let topLevelItems = this.props.topLevel;\n        /* builds a list of top level menu / navigational items */\n        let listItems = topLevelItems.map((n, i) =>\n          <li \n          className=\"top-level-item\" \n          role=\"button\" \n          tabIndex=\"0\" \n          onKeyDown={this.aria} \n          key={i} \n          onClick={(e) => this.openSubMenu(e.target)}>\n            {n}\n          </li>\n        );\n        return (\n            <div className={nameOfClass}>\n                <ul>\n                    {listItems}\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\n//all categories and their associative sub-categories\nlet cats = {\n    \"Reporting\": [\"Injury Reporting\", \"ASAP Reporting\", \"General ASAP Information\"],\n    \"Agriculture and Customs\" : [\"I-9 Reporting\", \"General ASAP Information\", \"ASAP Reporting\"],\n    \"Known Crewmembers\" : [\"ASAP Reporting\"],\n    \"Product Safety\" : [\"Known Crewmembers\", \"Product Safety\"]\n}\nexport default class SubMenuL3 extends Component {\nstate = {\n    expandedMenu: false,\n}\n    // will trigger css animation to move element off screen\n    hideMenu = () => {\n        let subL3 = document.querySelector(\".lower-level-menu\");\n        let spanItems = document.getElementsByClassName(\"list-item-span\");\n        subL3.classList.toggle(\"lower-level-menu-clicked\");\n        if (this.state.expandedMenu === true){\n            for(let el = 0; el < spanItems.length; el++){\n                if (spanItems[el].classList.contains('display-span')){   \n                    spanItems[el].classList.toggle(\"display-span\");\n                     this.setState({expandedMenu: false});\n                }\n            }\n        }\n    }\n    //    all sub-categories\n    getListItems = (name, i) => {\n        return cats[name].map((el, index) => \n        <span key={index} \n        className=\"list-item-span\">\n              {el}\n            </span>\n        )\n    }\n    //    function to expand/display the assosciative sub-menu for the category that's selected\n    expandCategory = (e, i) => {\n        e.bubbles = true;\n        let spanItems = document.getElementsByClassName(\"list-item-span\");\n        let container = document.querySelector(`#${e.currentTarget.id}`);\n       let items = container.children[1];\n       \n       if (items.children.length > 0){\n           for (let k = 0; k < items.children.length; k++){\n               items.children[k].classList.toggle(\"display-span\");\n            }\n        }\n        let count = 0;\n        for(let el = 0; el < spanItems.length; el++){\n        if (spanItems[el].classList.contains('display-span')){\n            count++;\n        }\n        count > 0 ? this.setState({expandedMenu: true}) : this.setState({expandedMenu: false});\n    }\n    }\n\n//    a11y support\n   aria = (e) => {\n    if (e.keyCode === 13) {\n      this.expandCategory(e);\n    }\n  }\n    render() {\n        let nameOfClass = `menu-slide-container ${this.props.cName}`;\n    /* iterates through the categories and their sub-menu items\n    then places the obj key instead a new array */\n        let categories = [];\n        for (let [key] of Object.entries(cats)) {\n            categories.push(key);\n        };\n// grabs the Title of each category and appends children elements that list sub-categories\n        let listItems = categories.map((n, i) => \n            <div role=\"button\" tabIndex=\"0\" onKeyDown={this.aria}  key={i} className=\"item-container\" id={`id${i}`}\n            onClick={(e) => this.expandCategory(e, i)}>\n                <div className=\"sub-level-item\">\n                    <p>{n}</p>\n                    <i className=\"fas fa-sort-down hidden-icon fa-lg\"></i>\n                </div>\n                <div className=\"list-items\">\n                    {this.getListItems(n, i)}\n                </div>\n            </div>\n        );\n        return (\n            <div className={nameOfClass} tabIndex=\"0\">\n                <i className=\"fas fa-arrow-left fa-2x\" onClick={this.hideMenu}></i>\n                    <h4>{this.props.menuItem}</h4>\n                    {listItems}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css';\nimport Header from './comps/Header';\nimport SubMenu from './comps/SubMenu';\nimport VertNavBar from './comps/VertNavBar';\nimport SubMenuL3 from './comps/SubMenuL3';\nimport menuBtn from './images/sprite_60fps.svg';\n\n\nexport default class App extends Component {\n  state = {\n    hamburgerClicked: false,\n    topLevelCats: \n    [\"SCHEDULING & BIDDING\",\n     \"SAFETY\", \n     \"TRAINING\", \n     \"ADMINISTRATION\", \n     \"HOTELS\", \n     \"MY BASE\"],\n    currentTopLvlMenuItem: \"\",\n  }\n\n  openMenu = (e) => {\n    let slides = document.querySelector('.slides');\n    let vertNav = document.querySelector('.nav-container');\n    let topSlide = document.querySelector('.slide-top');\n    let menuBtn = document.querySelector('.menu-btn-animate');\n    if (this.state.hamburgerClicked === false){\n      this.setState({hamburgerClicked: true});\n      menuBtn.classList.toggle(\"play\");\n    } else {\n      this.setState({hamburgerClicked: false});\n      menuBtn.classList.toggle(\"play\");\n      slides.classList.toggle(\"slides-clicked\");\n    }\n    slides.classList.toggle(\"slides-clicked\");\n    topSlide.classList.toggle(\"slide-top-clicked\");\n    vertNav.classList.toggle(\"nav-container-visible\");\n    \n  }\n\n  updateTopLvlMenuItem = (e) => {\n    this.setState({currentTopLvlMenuItem: e.innerText});\n  }\n\n  aria = (e) => {\n    if (e.keyCode === 13) {\n      this.openMenu();\n    }\n  }\n  render() {\n    return(\n\n      <div className=\"App\">\n       {/* alaka airlines logo in Header */}\n        <Header/>\n\n        {/* hambuger icon */}\n        <img src={menuBtn} alt=\"menu button\" className=\"menu-btn-animate\" role=\"button\" tabIndex=\"0\" onKeyDown={this.aria} onClick={(e) => this.openMenu(e)}></img>\n\n        {/* left side navigation menu */}\n        <VertNavBar cName=\"main-nav\" topLevel={this.state.topLevelCats} menuItem={this.updateTopLvlMenuItem} aria={this.aria}/>\n      {/* the menu on the very buttom (level 3),hidden on init*/}\n      <SubMenuL3 cName=\"lower-level-menu\" menuItem={this.state.currentTopLvlMenuItem} aria={this.aria}/>\n\n      {/* main focus on init, landing page slide  */}\n      <div className=\"slides\">\n        <SubMenu cName=\"slide-top\" closeMenu={this.openMenu} aria={this.aria}/>\n      </div>\n    </div>\n      )\n}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}